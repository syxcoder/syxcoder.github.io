<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于Colab部署NovelAI项目</title>
    <link href="/2022/10/25/%E5%9F%BA%E4%BA%8EColab%E9%83%A8%E7%BD%B2NovelAI%E9%A1%B9%E7%9B%AE/"/>
    <url>/2022/10/25/%E5%9F%BA%E4%BA%8EColab%E9%83%A8%E7%BD%B2NovelAI%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="一、Colab介绍"><a href="#一、Colab介绍" class="headerlink" title="一、Colab介绍"></a>一、Colab介绍</h1><p>​在机器学习过程中我们可能需要cuda来使用GPU加速训练网络，但是cuda目前只支持N卡，像我的MBP或者其他显卡又该怎么办呢？</p><h2 id="Colab是什么？"><a href="#Colab是什么？" class="headerlink" title="Colab是什么？"></a>Colab是什么？</h2><p>​Colab &#x3D; Colaboratory（合作实验室），它是谷歌提供的一个在线工作平台，用户可以直接通过浏览器执行python代码并于他人合作分享。当然最主要的是，他还为我们提供免费的GPU。熟悉深度学习的伙伴应该知道，CPU计算力高但是核数量少，善于处理线性序列，而GPU计算力低但核数量多，更善于处理并行计算。因此在深度学习中使用GPU计算的速度要远快于CPU，因此有高算力的GPU是深度学习的重要保证。因此Colab最大的优势在于我们可以免费的借用谷歌提供的GPU来进行深度学习。国内也有类似的平台，例如百度的飞浆，但是免费使用时长及性能不及Colab。</p><h2 id="Colab相关的概念"><a href="#Colab相关的概念" class="headerlink" title="Colab相关的概念"></a>Colab相关的概念</h2><p><strong>Jupyter Notebook：</strong> 在Colab中，python代码的执行是基于.ipynb文件，也就是Jupyter Notebook文件格式 的python文件。这种笔记本风格的文件与普通的py文件的区别是它可以分块执行代码并立刻得到代码块的输出（有点像命令行中的python，但是前者可以写一个代码块而命令行是单行执行），同时它还可以很方便的添加注释，这种交互式 的操作十分适合一些轻量级的任务。<a href="https://jupyter.org/">具体关于Jupyter NoteBook的信息可以点此访问官网。</a></p><p><strong>代码执行程序：</strong>代码执行程序就是Colab在云端的服务器。简单来说，我们现在Notebook写好代码，然后连接到代码执行程序，Colab会在云端执行代码，然后把结果回传给浏览器。</p><p><strong>实例空间：</strong>连接到代码执行程序后，Colab需要为其分配实例空间(Instance)，可以简单理解为为了运行Notebook而创建的“虚拟机”，其中包含了执行ipynb文件时的默认配置、环境变量、自带的库等。</p><p><strong>会话：</strong>当Jupyter Notebook连接到代码执行程序并分配实例空间后，就成为了一个会话(Session)，但是用户能开启的会话是有限的。</p><p>支持通过“**!&lt;command&gt;**”的方式来执行UNIX终端命令，比如“!ls”, “!pip install &lt;package&gt;“等。</p><hr><img src="/2022/10/25/%E5%9F%BA%E4%BA%8EColab%E9%83%A8%E7%BD%B2NovelAI%E9%A1%B9%E7%9B%AE/colab2.jpg" class="" title="colab2"><hr><h1 id="二、部署NovelAI项目"><a href="#二、部署NovelAI项目" class="headerlink" title="二、部署NovelAI项目"></a>二、部署NovelAI项目</h1><h2 id="1、配置环境"><a href="#1、配置环境" class="headerlink" title="1、配置环境"></a>1、配置环境</h2><h3 id="1-1-测试显卡"><a href="#1-1-测试显卡" class="headerlink" title="1.1 测试显卡"></a>1.1 测试显卡</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">!nvidia-smi -L<br></code></pre></td></tr></table></figure><h3 id="1-2-Setup-miniconda"><a href="#1-2-Setup-miniconda" class="headerlink" title="1.2 Setup miniconda"></a>1.2 Setup miniconda</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br>!wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh<br>!chmod +x Miniconda3-latest-Linux-x86_64.sh<br>!bash ./Miniconda3-latest-Linux-x86_64.sh -b -f -p /usr/local<br>sys.path.append(<span class="hljs-string">&#x27;/usr/local/lib/python3.7/site-packages/&#x27;</span>)<br>!rm Miniconda3-latest-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><h3 id="1-3-Setup-environment"><a href="#1-3-Setup-environment" class="headerlink" title="1.3 Setup environment"></a>1.3 Setup environment</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">!conda env update -n base -f /content/stable-diffusion/environment.yaml <br></code></pre></td></tr></table></figure><h3 id="1-4-Setup-Upscalers-CFPGAN-and-ESRGAN"><a href="#1-4-Setup-Upscalers-CFPGAN-and-ESRGAN" class="headerlink" title="1.4 Setup Upscalers - CFPGAN and ESRGAN"></a>1.4 Setup Upscalers - CFPGAN and ESRGAN</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python">add_CFP = <span class="hljs-literal">True</span> <span class="hljs-comment">#@param &#123;type:&quot;boolean&quot;&#125; </span><br>add_ESR = <span class="hljs-literal">True</span> <span class="hljs-comment">#@param &#123;type:&quot;boolean&quot;&#125;</span><br>add_LDSR = <span class="hljs-literal">False</span> <span class="hljs-comment">#@param &#123;type:&quot;boolean&quot;&#125; </span><br><span class="hljs-comment">#@markdown ⚠️ LDSR is 1.9GB and make take time to download</span><br><br><span class="hljs-keyword">if</span> add_CFP:<br>  %cd /content/stable-diffusion/src/gfpgan/<br>  !pip install basicsr facexlib yapf lmdb opencv-python pyyaml tb-nightly --no-deps<br>  !python setup.py develop<br>  !pip install realesrgan<br>  !wget https://github.com/TencentARC/GFPGAN/releases/download/v1<span class="hljs-number">.3</span><span class="hljs-number">.0</span>/GFPGANv1<span class="hljs-number">.3</span>.pth -P experiments/pretrained_models<br><span class="hljs-keyword">if</span> add_ESR:<br>  %cd /content/stable-diffusion/src/realesrgan/<br>  !wget https://github.com/xinntao/Real-ESRGAN/releases/download/v0<span class="hljs-number">.1</span><span class="hljs-number">.0</span>/RealESRGAN_x4plus.pth -P experiments/pretrained_models<br>  !wget https://github.com/xinntao/Real-ESRGAN/releases/download/v0<span class="hljs-number">.2</span><span class="hljs-number">.2</span><span class="hljs-number">.4</span>/RealESRGAN_x4plus_anime_6B.pth -P experiments/pretrained_models<br><span class="hljs-keyword">if</span> add_LDSR:<br>  %cd /content/stable-diffusion/src<br>  !git clone https://github.com/devilismyfriend/latent-diffusion<br>  %cd latent-diffusion<br>  %mkdir -p experiments/<br>  %cd experiments/<br>  %mkdir -p pretrained_models<br>  %cd pretrained_models<br>  <span class="hljs-comment">#project.yaml download</span><br>  !wget -O project.yaml https://heibox.uni-heidelberg.de/f/31a76b13ea27482981b4/?dl=<span class="hljs-number">1</span><br>  <span class="hljs-comment">#model.ckpt model download</span><br>  !wget -O model.ckpt https://heibox.uni-heidelberg.de/f/578df07c8fc04ffbadf3/?dl=<span class="hljs-number">1</span><br><br>%cd /content/stable-diffusion/<br>!wget https://github.com/matomo-org/travis-scripts/blob/master/fonts/Arial.ttf?raw=true -O arial.ttf<br></code></pre></td></tr></table></figure><h2 id="2、配置NovelAI"><a href="#2、配置NovelAI" class="headerlink" title="2、配置NovelAI"></a>2、配置NovelAI</h2><h3 id="2-1-下载复制文件"><a href="#2-1-下载复制文件" class="headerlink" title="2.1 下载复制文件"></a>2.1 下载复制文件</h3><p>是在github上clone下来的项目，最快也要三五分钟，耐心等待。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">!sudo apt-get install aria2<br>!sudo apt-get install file<br><br>!mkdir /content/time<br>!git clone https://github.com/pnpnpn/timeout-decorator.git /content/time<br>%cd /content/time<br>!pwd<br>!ls -l<br></code></pre></td></tr></table></figure><p>下载NA</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python">%cd /content/time<br><br><span class="hljs-keyword">import</span> timeout_decorator<br><br><span class="hljs-meta">@timeout_decorator.timeout(<span class="hljs-params"><span class="hljs-number">180</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">downNovelAI</span>():<br>  !rm -rf /content/n2<br>  !mkdir /content/n2<br>  %cd /content/n2<br>  !aria2c <span class="hljs-string">&quot;magnet:?xt=urn:btih:4a4b483d4a5840b6e1fee6b0ca1582c979434e4d&amp;dn=naifu&amp;tr=udp%3a%2f%2ftracker.opentrackr.org%3a1337%2fannounce&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkFile</span>():<br>  !file /content/n2/naifu/models/animefull-final-pruned/model.ckpt&gt;fileinfo<br>  !file /content/n2/naifu/models/animevae.pt&gt;fileinfo2<br>  f1=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;fileinfo&quot;</span>)<br>  res1=f1.read()<br>  f1.close<br>  f2=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;fileinfo2&quot;</span>)<br>  res2=f2.read()<br>  f2.close<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Zip&quot;</span> <span class="hljs-keyword">in</span> res1 <span class="hljs-keyword">and</span> <span class="hljs-string">&quot;Zip&quot;</span> <span class="hljs-keyword">in</span> res2<br><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>  <span class="hljs-keyword">try</span>:<br>    downNovelAI()<br>  <span class="hljs-keyword">except</span>:<br>    <span class="hljs-keyword">if</span> checkFile():<br>      <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;下载完成&quot;</span>)<br>      <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>      <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;下载未完成，重试&quot;</span>)<br></code></pre></td></tr></table></figure><p>下载WebUI</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">!mkdir /content/novelai<br>%cd /content/novelai<br>!git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui /content/novelai<br>%cd /content/novelai<br>!git checkout -b master<br></code></pre></td></tr></table></figure><p>复制训练好的模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">!cp /content/n2/naifu/models/animefull-final-pruned/model.ckpt /content/novelai/models/Stable-diffusion/<br>!cp /content/n2/naifu/models/animevae.pt /content/novelai/models/Stable-diffusion/model.pt<br><br>!mkdir -p /content/novelai/train_images/raw/<br>!mkdir -p /content/novelai/train_images/des/<br></code></pre></td></tr></table></figure><h3 id="2-2-设置登录账号密码"><a href="#2-2-设置登录账号密码" class="headerlink" title="2.2 设置登录账号密码"></a>2.2 设置登录账号密码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#@markdown # 用户名</span><br>user = <span class="hljs-string">&quot;admin&quot;</span> <span class="hljs-comment">#@param&#123;type:&quot;string&quot;&#125;</span><br><span class="hljs-comment">#@markdown # 密码</span><br>pwd = <span class="hljs-string">&quot;123456&quot;</span> <span class="hljs-comment">#@param&#123;type:&quot;string&quot;&#125;</span><br></code></pre></td></tr></table></figure><hr><h1 id="三、启动！"><a href="#三、启动！" class="headerlink" title="三、启动！"></a>三、启动！</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;用户名=<span class="hljs-subst">&#123;user&#125;</span>, 密码=<span class="hljs-subst">&#123;pwd&#125;</span>&quot;</span>)<br>!python launch.py --share --gradio-auth &#123;user&#125;:&#123;pwd&#125;<br></code></pre></td></tr></table></figure><img src="/2022/10/25/%E5%9F%BA%E4%BA%8EColab%E9%83%A8%E7%BD%B2NovelAI%E9%A1%B9%E7%9B%AE/colab.jpg" class="" title="colab">]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
      <tag>python</tag>
      
      <tag>colab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>八月随笔</title>
    <link href="/2022/08/21/%E5%85%AB%E6%9C%88%E9%9A%8F%E7%AC%94/"/>
    <url>/2022/08/21/%E5%85%AB%E6%9C%88%E9%9A%8F%E7%AC%94/</url>
    
    <content type="html"><![CDATA[<img src="/2022/08/21/%E5%85%AB%E6%9C%88%E9%9A%8F%E7%AC%94/sb.jpg" class="" title="informal_essay"><h2 id="校验算法-CRC16"><a href="#校验算法-CRC16" class="headerlink" title="校验算法- CRC16"></a>校验算法- CRC16</h2><h3 id="常见标准"><a href="#常见标准" class="headerlink" title="常见标准"></a>常见标准</h3><blockquote><p> CRC16_CCITT：多项式x16+x12+x5+1（0x1021），初始值0x0000，低位在前，高位在后，结果与0x0000异或<br>CRC16_CCITT_FALSE：多项式x16+x12+x5+1（0x1021），初始值0xFFFF，低位在后，高位在前，结果与0x0000异或<br>CRC16_XMODEM：多项式x16+x12+x5+1（0x1021），初始值0x0000，低位在后，高位在前，结果与0x0000异或<br>CRC16_X25：多项式x16+x12+x5+1（0x1021），初始值0xFFFF，低位在前，高位在后，结果与0xFFFF异或<br>CRC16_MODBUS：多项式x16+x15+x2+1（0x8005），初始值0xFFFF，低位在前，高位在后，结果与0x0000异或<br>CRC16_MAXIM：多项式x16+x15+x2+1（0x8005），初始值0x0000，低位在前，高位在后，结果与0xFFFF异或<br>CRC16_USB：多项式x16+x15+x2+1（0x8005），初始值0xFFFF，低位在前，高位在后，结果与0xFFFF异或<br>CRC16_IBM：多项式x16+x15+x2+1（0x8005），初始值0x0000，低位在前，高位在后，结果与0x0000异或</p></blockquote><hr><h3 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h3><blockquote><p>1.根据CRC16的标准选择初值CRCIn的值。<br>2.将数据的第一个字节与CRCIn高8位异或。<br>3.判断最高位，若该位为 0 左移一位，若为 1 左移一位再与多项式Hex码异或。<br>4.重复3直至8位全部移位计算结束。<br>5.重复将所有输入数据操作完成以上步骤，所得16位数即16位CRC校验码。</p></blockquote><hr><h2 id="关于数据类型"><a href="#关于数据类型" class="headerlink" title="关于数据类型"></a>关于数据类型</h2><blockquote><p>c++内建整型中唯一用到的是int，如果需要不同大小的变量，可以使用&lt;stdint.h&gt;中的精确宽度的整型，如int 6_t。不要使用uint32_t等无符号整数，除非是在表示一个位组(bit pattern)而不是一个人数值。即使数值不会为负值也不要使用无符号类型。</p><p>char有可能是signed，也有可能是unsigned（取决于编译器）</p></blockquote><hr><h2 id="关于C-编码规范"><a href="#关于C-编码规范" class="headerlink" title="关于C++编码规范"></a>关于C++编码规范</h2><blockquote><p>1、所有的头文件都应该使用# define保护，防止被多重包含，格式为<PROJECT><em><PATH></em><FILE><em>H</em><br>    2、使用前置声明尽量减少.h文件中# include的数量，降低编译依赖；能依赖声明的就不要依赖定义。<br>    3、内联函数：当函数不超过10行时，且内部结构不复杂时。对于复杂的内联函数的定义，应该放在-inl.h的头文件中。-inl.h文件还可以用于函数模板的定义（一般用不到）。<br>    4、定义函数时尽量做到输入参数在前，输出参数在后：提高可读性和易维护性。<br>    5、项目内头文件应按照项目源代码目录树结构排列。包含次序：对应的头文件、C系统文件、C++系统文件、其他库头文件、本项目内头文件。<br>    6、允许甚至提倡匿名命名空间，以避免运行时的命名冲突。匿名命名空间的内容无需缩进，空间结束时用注释&#x2F;&#x2F; namespace标识，不能在.h头文件中使用匿名命名空间！<br>    7、最好不要使用using指示符，保证命名空间下的所有名称都可以正常使用，防止污染命名空间。<br>    8、不要将嵌套类定义为public，除非他们是接口的一部分。<br>    非成员函数、静态成员函数和全局函数使用命名空间中的非成员函数或静态成员函数，尽量不要使用全局函数。<br>   9、如果变量是一个 对象，每次进入作用域都要调用其构造函数，每次退出都要调用析构函数，所以这类变量尽量在作用域外声明会更加高效。<br>    10、禁止使用class类型的静态或全局变量。<br>    11、不要使用函数返回值初始化静态变量。<br>    12、不要在多线程代码中使用非 const 的静态变量。<br>    13、构造函数一般进行没什么意义的初始化，有意义的初始化尽量放在Init()函数中。<br>    14、如果类中定义了成员变量而且没有提供其他构造函数，就要自己定义一个默认构造函数。<br>    15、所有单参数构造函数都必须是显式的。在类定义中，将关键字 explicit 加到单参数构造函数前。</p></blockquote><p>未完待续……</p><hr><h2 id="屏蔽SIGPIPE信号"><a href="#屏蔽SIGPIPE信号" class="headerlink" title="屏蔽SIGPIPE信号"></a>屏蔽SIGPIPE信号</h2><blockquote><p>signal(SIGPIPE, SIG_IGN);不要直接通过signal来忽略信号</p><p>可以通过下列方法来屏蔽SIGPIPE信号：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">sigaction</span> sa;<br>sa.sa_handler = SIG_IGN;<span class="hljs-comment">//设定接受到指定信号后的动作为忽略</span><br>sa.sa_flags = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">sigemptyset</span>(&amp;sa.sa_mask) == <span class="hljs-number">-1</span> || <span class="hljs-comment">//初始化信号集为空</span><br><span class="hljs-built_in">sigaction</span>(SIGPIPE, &amp;sa, <span class="hljs-number">0</span>) == <span class="hljs-number">-1</span>) <span class="hljs-comment">//屏蔽SIGPIPE信号</span><br>&#123; <br><span class="hljs-built_in">perror</span>(<span class="hljs-string">&quot;failed to ignore SIGPIPE; sigaction&quot;</span>);<br><span class="hljs-built_in">exit</span>(EXIT_FAILURE);<br>&#125;<br></code></pre></td></tr></table></figure></blockquote><hr>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>It&#39;s my new blog</title>
    <link href="/2022/08/19/test/"/>
    <url>/2022/08/19/test/</url>
    
    <content type="html"><![CDATA[<h1 id="开个新博客记录一下工作学习中的东西吧"><a href="#开个新博客记录一下工作学习中的东西吧" class="headerlink" title="开个新博客记录一下工作学习中的东西吧"></a>开个新博客记录一下工作学习中的东西吧</h1><img src="/2022/08/19/test/test.jpeg" class="" title="test">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/08/15/hello-world/"/>
    <url>/2022/08/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
